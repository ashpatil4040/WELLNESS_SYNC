import request from 'supertest';
import app from '../../../src/app';
import { User } from '../../../src/models/User';

describe('Auth Controller', () => {
  beforeAll(async () => {
    await User.sync({ force: true }); // Reset the database before tests
  });

  afterAll(async () => {
    await User.drop(); // Clean up after tests
  });

  it('should register a new user', async () => {
    const response = await request(app)
      .post('/register')
      .send({ username: 'testuser', password: 'password123' });

    expect(response.status).toBe(201);
    expect(response.body).toHaveProperty('id');
    expect(response.body.username).toBe('testuser');
  });

  it('should return an error for duplicate username', async () => {
    await request(app)
      .post('/register')
      .send({ username: 'testuser', password: 'password123' });

    const response = await request(app)
      .post('/register')
      .send({ username: 'testuser', password: 'password123' });

    expect(response.status).toBe(500);
    expect(response.body.message).toBe('Error registering user');
  });
});