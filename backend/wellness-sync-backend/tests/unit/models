import { User } from '../../../src/models/User';
import { sequelize } from '../../../src/models/index';

describe('User Model', () => {
  beforeAll(async () => {
    await sequelize.sync({ force: true });
  });

  afterAll(async () => {
    await sequelize.close();
  });

  it('should create a user successfully', async () => {
    const user = await User.create({ username: 'testuser', password: 'password123' });
    expect(user).toHaveProperty('id');
    expect(user.username).toBe('testuser');
  });

  it('should not create a user without a username', async () => {
    await expect(User.create({ password: 'password123' })).rejects.toThrow();
  });

  it('should not create a user without a password', async () => {
    await expect(User.create({ username: 'testuser' })).rejects.toThrow();
  });
});